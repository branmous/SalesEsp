@page "/states/create/{CountryId:int}"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@inject IToastService toastService

<h3>Crear Estado/Departamento</h3>

<StateForm @ref="stateForm" State="state" OnValidSubmit="CreateAsync" ReturnAction="Return" />

@code {
	private State state = new();
	private StateForm? stateForm;

	[Parameter]
	public int CountryId { get; set; }

	public async Task CreateAsync()
	{
		state.CountryId = CountryId;
		var response = await repository.PostAsync("api/states", state);
		if (response.Error)
		{
			var messageError = await response.GetErrorMessageAsync();
			await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
			return;
		}

		Return();
		await toastService.Success("Estado/Departamento creado con éxito");
	}

	public void Return()
	{
		stateForm!.FormPostedSuccessfully = true;
		navigationManager.NavigateTo($"/countries/details/{CountryId}");
	}
}
